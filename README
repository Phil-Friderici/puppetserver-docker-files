This repo contains Dokcer Puppetserver images that are adapted from the Puppetlabs images.

1. Docker images

The Puppetlabs images are inflexible and may not allow proper setup of Puppet servers to meet our design.
One such shortcoming is that each Puppetserver instance instantiates a Puppetca.

The instances do not also allow creation of dns_alt_names 


To build the images, cd into the directory containing Dockerfile
such as (puppetserver)
# cd /PATH/puppetserver-docker-files/puppetserver/docker/puppetserver
And run the following command, providing a tag to refer to the image
# docker build -t puppet/puppetserver1-local .


Puppetdb
# cd /PATH/puppetserver-docker-files/puppetdb/docker/puppetdb 
# docker build -t puppet/puppetdb-local .




You then need to push these images to a registry server for easy access during stack deployment
such as
Puppetserver image
# docker tag puppet/puppetserver-local docker-registry.fqdn:5000/puppet/puppetserver-local
# docker push docker-registry.fqdn:5000/puppet/puppetserver-local

PuppetDB image
# docker tag puppet/puppetdb-local docker-registry.fqdn:5000/puppet/puppetdb-local
# docker push docker-registry.fqdn:5000/puppet/puppetdb-local



###################################################################
2. docker-compose.yml
In this directory there's also a sample full stack docker-compose.yml
Please adapt it accordingly to fix the image names and node.label servers

and then deploy the full stack with the following command


# docker stack deploy -c docker-compose.yml <stack-name>
such as
# docker stack deploy -c docker-compose.yml puppet

This has been tested to work with 

Docker version 18.03.1-ce

###########################################################
Extra notes

https://medium.com/@gauravsj9/how-to-install-specific-docker-version-on-linux-machine-d0ec2d4095

Add labels to Swarm nodes:

This allows restricting docker containers on specific nodes. Useful for SSL certificates etc.

# docker node update --label-add type=puppetdb1_node <Node ID>
#  docker node update --label-add type=fqdn_puppetdb_primary ja3c57gxcso6awtlp4obenih9
 
Use intuitive label_name. 
Node ID can be found from 1st column in the output of "docker node ls" command on the swarm manager.


Registry server:

4. For the swarm, images have to come from a central registry.
Could user Internet registry / docker.io. Or create a local registry
To create a local registry run the following command:

# docker service create --name registry --publish published=5000,target=5000 registry:2

This way, images can be pushed to localhost:5000
For proper use across the network, create a registry to be used with fqdn:5000/
And this requires SSL certificates to be setup on the Registry / and also on nodes. 

Registry SSL certificate setup.
To allow registry use from remote hosts, SSL has to be configured.

Certs:

Copy the Registry certificates to the nodes.
Certificates could be self-signed, or even use Puppet's ssl certificate.

Copy certificates to the following directory.

/etc/docker/certs.d/docker-registry.fqdn:5000/

domain.crt (ca.pem)
domain.key


The below file configuration may be needed to allow insecure registries


/etc/docker/daemon.json
{
        "insecure-registries" : ["docker-registry.fqdn:5000"]
    }


This allows images to be downloaded from the Private/internal registry.
To test:

docker pull docker-registry.fqdn:5000/puppet/puppetserver-local
